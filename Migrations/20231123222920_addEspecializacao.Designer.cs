// <auto-generated />
using System;
using GS.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GS.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20231123222920_addEspecializacao")]
    partial class addEspecializacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GS.Models.Atendimento", b =>
                {
                    b.Property<int>("AtendimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AtendimentoId"));

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Dor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Fator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalDor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("AtendimentoId");

                    b.HasIndex("MedicoId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("GS.Models.AtendimentoBeneficiario", b =>
                {
                    b.Property<int>("BeneficiarioId")
                        .HasColumnType("int");

                    b.Property<int>("AtendimentoId")
                        .HasColumnType("int");

                    b.HasKey("BeneficiarioId", "AtendimentoId");

                    b.HasIndex("AtendimentoId");

                    b.ToTable("AtendimentosBeneficiarios");
                });

            modelBuilder.Entity("GS.Models.Beneficiario", b =>
                {
                    b.Property<int>("BeneficiarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiarioId"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("RedeAtendimento")
                        .HasColumnType("int");

                    b.Property<bool>("UsoSubstancias")
                        .HasColumnType("bit");

                    b.HasKey("BeneficiarioId");

                    b.ToTable("Beneficiarios");
                });

            modelBuilder.Entity("GS.Models.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicoId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Especial")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicoId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("GS.Models.Atendimento", b =>
                {
                    b.HasOne("GS.Models.Medico", "Medico")
                        .WithMany("Atendimentos")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("GS.Models.AtendimentoBeneficiario", b =>
                {
                    b.HasOne("GS.Models.Atendimento", "Atendimento")
                        .WithMany("AtendimentosBeneficiarios")
                        .HasForeignKey("AtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Models.Beneficiario", "Beneficiario")
                        .WithMany("AtendimentosBeneficiarios")
                        .HasForeignKey("BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atendimento");

                    b.Navigation("Beneficiario");
                });

            modelBuilder.Entity("GS.Models.Atendimento", b =>
                {
                    b.Navigation("AtendimentosBeneficiarios");
                });

            modelBuilder.Entity("GS.Models.Beneficiario", b =>
                {
                    b.Navigation("AtendimentosBeneficiarios");
                });

            modelBuilder.Entity("GS.Models.Medico", b =>
                {
                    b.Navigation("Atendimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
